'use strict'; 
 
//############################# 
//    MODULES 
//############################# 
 
 
//############################# 
//    DEFAULTS 
//############################# 
const defaults = { 
  "metadata": {}, 
  "records": [], 
  "errors": [], 
} 
 
//############################# 
//    MAIN RECORD BATCH CLASS 
//############################# 
class RecordBatch { 
 
  constructor() { 
    if (this.constructor === RecordBatch) { 
      // Error Type 1. Abstract class can not be constructed. 
      throw new TypeError("Can not construct abstract class RecordBatch."); 
    } 
 
    // Abstract records and errors in this.data to allow easy access to full data object 
    // -> Useful for saving purposes as well as schema validation 
    this.data = {}; 
    this.data.metadata = defaults.metadata; 
    this.data.records = defaults.records; 
    this.data.errors = defaults.errors; 
 
  } 
 
  //**************************** 
  //   Batch Record Metadata 
  //**************************** 
  // TODO - not critical for migration purposes 
  // -> Importance increases once API development commences 
  set metadata(metadata) { 
    this.data.metadata = metadata; 
  } 
 
  get metadata() { 
    return this.data.metadata; 
  } 
 
  //**************************** 
  //   Records Array 
  //**************************** 
  set records(records) { 
    this.data.records = records; 
  } 
 
  get records() { 
    return this.data.records; 
  } 
 
  //**************************** 
  //   Return Errors 
  //**************************** 
  set errors(errors) { 
    this.data.errors = errors; 
  } 
 
  get errors() { 
    return this.data.errors; 
  } 
 
  //**************************** 
  //   Record Batch Methods 
  //**************************** 
 
  populateFromSpreadsheet(SheetJSON, totalRowNum) { 
    //------------------------------------------------------     
    //Abstract method 
    throw new TypeError("RecordBatch base class implementation of populateFromSpreadsheet() undefined (asbtract method)!"); 
  } 
 
  populateFromJSONObject(json) { 
    // ---------------------------------------------------------------------------- 
    //Abstract method 
    throw new TypeError("RecordBatch base class implementation of populateFromJSONObject() undefined (asbtract method)!"); 
  } 
 
  validateSchema() { 
    // ---------------------------------------------------------------------------- 
    //Abstract method 
    throw new TypeError("RecordBatch base class implementation of validateSchema() undefined (asbtract method)!"); 
  } 
 
  validateBusinessRules(dbRec) { 
    // ---------------------------------------------------------------------------- 
    //Abstract method 
    throw new TypeError("RecordBatch base class implementation of validateBusinessRules() undefined (asbtract method)!"); 
} 
  writeToS3(bucketName, headerData = null) { 
    // ---------------------------------------------------------------------------- 
    //Abstract method 
    throw new TypeError("RecordBatch base class implementation of writeToS3() undefined (asbtract method)!"); 
  } 
 
  readFromS3(bucketName, key, version = null) { 
    // ---------------------------------------------------------------------------- 
    //Abstract method 
    throw new TypeError("RecordBatch base class implementation of readFromS3() undefined (asbtract method)!"); 
  } 
 
  flop(format = 'FULL') { 
    // ---------------------------------------------------------------------------- 
    //Abstract method 
    throw new TypeError("Return base class implementation of flop() undefined (asbtract method)!"); 
  } 
}; 
 
//############################# 
//    EXPORTS 
//############################# 
module.exports = RecordBatch; 

